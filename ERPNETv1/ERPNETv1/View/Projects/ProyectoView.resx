<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExcel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMkSURBVGhD7ZlfSFNRGMANeu2h156DHmSb29RKSyx6iFKyQOgpiMSe+geVUm4uI00qMaIH0wyq
        ERZRoEl/CI3Mgh4aSX/IKUSwsoTQpKm5fZ1z9109277Wt65uS+4PfnA55557f2ewu7FlmZiYmCxO7B77
        CqvbUSr0WF2OTovLEcCpzKLYU7zU5rJlW132XcLzIvaRcFQIseKS9LHqaOEy23HnOvFqVkZi7X0iLBgb
        +ifxMqnBUm1ZLmOtNc4D1hrHVRH9RkSEYqOSES+dGqgAo5bcKfsnt97d1odZfKgAo1JxXDGLDxVgVCqM
        K2bxoQKMSoVxxSw+VIBRqTCumMWHCjCqih6WCHMDqo3dZ/CyEapuHouaL2rYCBOTEzgLcPZ+U9S8VCXl
        G7DX5sGHL4N4aYChr0OQ486dnfc+v4EzAP4RPzg8+VHrpWpQsmIWn9ibSyuu7MXECPuuH9TGN58rgalf
        U9pYOByGPe2VcWulVBhXzOJDBUgfv+3RQiWvPw1oY12+ezgC0Onrilujq6KHJWJBNrClqRQm8dWWHO6o
        glA4pB2PB8dhQ+Mmcp1UJW0bkF7qbcNbAIz9HMMjgIauRvJ8XZW0bmD1yUIYGRvB20R4F3gPObVzb2pK
        NShZMYsPFaBbcKoobgOB7wHIrysgz9elwrhiFh8qQPfWy9uYDfDtxygeAbT0tJLn66roYYlYkA3svlyh
        PSolwekg7Pce0o4l8lFa2rydXCdVScsGck+sER9gw3h5gLYn7dr4s8F+HAHo97+IW6erkpYNtPS24qUj
        T5/19cXaePnFnbOPUsmRjuq4tVI1KFkxi0/szXdcKIfpmWlMjP+u82DgIc5E3hfyja7OS6kwrpjFR72x
        /M7z6qMP80B7AuXVrY2Oay6DmdAMngFwrd8bNS9V0cMSMW8bmC9VzA38DSrAqGpQsmIWHyrAqFQYV8zi
        QwUYlQrjill8qACjUmFcMYsPFWBUKozpU8zi89//uEshf14XG3HO/ReQwT+vc1H/4LC5nadFaKcwM//g
        SIIl2R7HSovbWW512+tFfLfwM86ZmJiYLBqysn4DglBCJf9xSjkAAAAASUVORK5CYII=
</value>
  </data>
</root>